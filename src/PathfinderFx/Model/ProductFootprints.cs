// <auto-generated />
//
// To parse this JSON data, add NuGet 'System.Text.Json' then do:
//
//    using PathfinderFx;
//
//    var productFootprints = ProductFootprints.FromJson(jsonString);
#nullable enable
using Newtonsoft.Json;

#pragma warning disable CS8618
#pragma warning disable CS8601
#pragma warning disable CS8603

namespace PathfinderFx.Model
{
    public partial class ProductFootprints
    {
        [JsonProperty("data")]
        public List<ProductFootprint> Data { get; set; }
    }

    public partial class ProductFootprint
    {
        [JsonProperty("id")]
        public Guid? Id { get; set; }

        [JsonProperty("specVersion")]
        public string SpecVersion { get; set; }

    
        [JsonProperty("precedingPfIds", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> PrecedingPfIds { get; set; }

        [JsonProperty("version")]
        public long? Version { get; set; }
        
        [JsonProperty("created")]
        public DateTimeOffset? Created { get; set; }
        
        [JsonProperty("updated", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? Updated { get; set; }

        [JsonProperty("status")]
        public Status Status { get; set; }
        
        [JsonProperty("statusComment", NullValueHandling = NullValueHandling.Ignore)]
        public string StatusComment { get; set; }

        [JsonProperty("validityPeriodStart", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? ValidityPeriodStart { get; set; }
        
        [JsonProperty("validityPeriodEnd", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? ValidityPeriodEnd { get; set; }
        
        [JsonProperty("companyName", NullValueHandling = NullValueHandling.Ignore)]
        public string CompanyName { get; set; }
        
        [JsonProperty("companyIds", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> CompanyIds { get; set; }
        
        [JsonProperty("productDescription", NullValueHandling = NullValueHandling.Ignore)]
        public string ProductDescription { get; set; }
        
        [JsonProperty("productIds", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> ProductIds { get; set; }
        
        [JsonProperty("productCategoryCpc", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(ParseStringConverter))]
        public long? ProductCategoryCpc { get; set; }

        [JsonProperty("productNameCompany")]
        public string ProductNameCompany { get; set; }
        
        [JsonProperty("comment", NullValueHandling = NullValueHandling.Ignore)]
        public string Comment { get; set; }

        [JsonProperty("pcf")]
        public Pcf Pcf { get; set; }
        
        [JsonProperty("extensions", NullValueHandling = NullValueHandling.Ignore)]
        public List<Extension> Extensions { get; set; }
    }

    public partial class ProductFootprints
    {
        public static ProductFootprints FromJson(string json) => JsonConvert.DeserializeObject<ProductFootprints>(json, Converter.Settings);
    }

    public static partial class Serialize
    {
        public static string ToJson(this ProductFootprints self) => JsonConvert.SerializeObject(self, Converter.Settings);
    }

}
#pragma warning restore CS8618
#pragma warning restore CS8601
#pragma warning restore CS8603
